# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.


name: Gridly C# .NET

on:
  push:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Com.Gridly.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: src/Com.Gridly.Test/Com.Gridly.Test.csproj                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Version: 1.0.0
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - run: dotnet restore
    
    # Build the application
    - name: Build the application
      run: dotnet build -c $env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        # Artifact name
        name: com.gridly.csharp-sdk
        # A file, directory or wildcard pattern that describes what to upload
        path: src/Com.Gridly/bin/Release
        retention-days: 1
        
    - name: Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: true
        release_name: 1.0.0
        tag_name: 1.0.0
      env:
        GITHUB_TOKEN: ${{ github.token }}
